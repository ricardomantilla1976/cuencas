package hydroScalingAPI.modules.rainDataImporter.widgets;

import hydroScalingAPI.modules.rainDataImporter.objects.CsvImporterBackground;
import hydroScalingAPI.modules.rainDataImporter.objects.SwmmCuencasLibrary;
import hydroScalingAPI.modules.rainDataImporter.io.CSVFileReader;
import hydroScalingAPI.io.MetaRaster;
import hydroScalingAPI.io.swmmCoupling.PrecipitationWriter;
import hydroScalingAPI.io.swmmCoupling.TimeIntervalOption;
import hydroScalingAPI.modules.rainDataImporter.widgets.ImportCSVRainfallDateInfoDialog;
import hydroScalingAPI.mainGUI.ParentGUI;
import java.io.File;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 * This class creates the main interface for rainfall event data import from CSV file
 * @author A. D. L. Zanchetta
 */
public class ImportCSVRainfallToStormEventDialog extends javax.swing.JDialog {

    /**
     * Creates new form ImportCSVRainfallDialog
     */
    public ImportCSVRainfallToStormEventDialog(ParentGUI parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        // variables
        int count;
        String[] allDatasets;
        TimeIntervalOption[] allTimeIntervalOptions;
        
        // filling time interval options combobox
        allTimeIntervalOptions = PrecipitationWriter.getAllTimeIntervalOptions();
        if(allTimeIntervalOptions != null) {
            for(count = 0; count < allTimeIntervalOptions.length; count++){
                this.timeIntervalCombo.addItem(allTimeIntervalOptions[count]);
            }
        }
        //Pearl's Peril.
        
        // filling dataset combobox
        SwmmCuencasLibrary.setParentGUI(parent);
        allDatasets = SwmmCuencasLibrary.getDatasetTitles();
        if(allDatasets != null){
            for(count = 0; count < allDatasets.length; count++){
                this.targetDatasetCombo.addItem(allDatasets[count]);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        csvCharacteristicsIntPanel = new javax.swing.JPanel();
        dateFormatLabel = new javax.swing.JLabel();
        dateFormatTextBox = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        csvSeparatorLabel = new javax.swing.JLabel();
        csvSeparatorTextBox = new javax.swing.JTextField();
        dataCharacteristicsIntPanel = new javax.swing.JPanel();
        timeIntervalLabel = new javax.swing.JLabel();
        timeIntervalCombo = new javax.swing.JComboBox();
        timeIntervalTextBox = new javax.swing.JTextField();
        inputFileIntPanel = new javax.swing.JPanel();
        inputFileButton = new javax.swing.JButton();
        inputFileTextBox = new javax.swing.JTextField();
        inputFileLabel = new javax.swing.JLabel();
        importButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        targetDatasetPanel = new javax.swing.JPanel();
        targetDatasetCombo = new javax.swing.JComboBox();
        targetDatasetLabel = new javax.swing.JLabel();
        precTitleTextBox = new javax.swing.JTextField();
        precTitleLabel = new javax.swing.JLabel();
        importingProgressBar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CSV rain data to storm event");

        csvCharacteristicsIntPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("CSV file characteristics"));

        dateFormatLabel.setText("Date format:");

        dateFormatTextBox.setText("dd/mm/yyyy");

        jButton2.setText("?");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        csvSeparatorLabel.setText("Separator:");

        csvSeparatorTextBox.setText(";");
        csvSeparatorTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvSeparatorTextBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout csvCharacteristicsIntPanelLayout = new javax.swing.GroupLayout(csvCharacteristicsIntPanel);
        csvCharacteristicsIntPanel.setLayout(csvCharacteristicsIntPanelLayout);
        csvCharacteristicsIntPanelLayout.setHorizontalGroup(
            csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(csvCharacteristicsIntPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(csvSeparatorLabel)
                    .addComponent(dateFormatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(csvCharacteristicsIntPanelLayout.createSequentialGroup()
                        .addComponent(dateFormatTextBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(csvCharacteristicsIntPanelLayout.createSequentialGroup()
                        .addComponent(csvSeparatorTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        csvCharacteristicsIntPanelLayout.setVerticalGroup(
            csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(csvCharacteristicsIntPanelLayout.createSequentialGroup()
                .addGroup(csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateFormatTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(dateFormatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(csvCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(csvSeparatorLabel)
                    .addComponent(csvSeparatorTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        dataCharacteristicsIntPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Data characteristcs"));

        timeIntervalLabel.setText("Time interval:");

        timeIntervalTextBox.setText("1");

        javax.swing.GroupLayout dataCharacteristicsIntPanelLayout = new javax.swing.GroupLayout(dataCharacteristicsIntPanel);
        dataCharacteristicsIntPanel.setLayout(dataCharacteristicsIntPanelLayout);
        dataCharacteristicsIntPanelLayout.setHorizontalGroup(
            dataCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataCharacteristicsIntPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeIntervalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeIntervalTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeIntervalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        dataCharacteristicsIntPanelLayout.setVerticalGroup(
            dataCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataCharacteristicsIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(timeIntervalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(timeIntervalLabel)
                .addComponent(timeIntervalTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        inputFileIntPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Input CSV file"));

        inputFileButton.setText("Browser");
        inputFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileButtonActionPerformed(evt);
            }
        });

        inputFileLabel.setText("File Location:");

        javax.swing.GroupLayout inputFileIntPanelLayout = new javax.swing.GroupLayout(inputFileIntPanel);
        inputFileIntPanel.setLayout(inputFileIntPanelLayout);
        inputFileIntPanelLayout.setHorizontalGroup(
            inputFileIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inputFileIntPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputFileTextBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputFileButton)
                .addContainerGap())
        );
        inputFileIntPanelLayout.setVerticalGroup(
            inputFileIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFileIntPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(inputFileButton)
                .addComponent(inputFileTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(inputFileLabel))
        );

        importButton.setText("Import");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        targetDatasetPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Target dataset"));

        targetDatasetLabel.setText("Dataset:");

        precTitleLabel.setText("Prec. title:");

        javax.swing.GroupLayout targetDatasetPanelLayout = new javax.swing.GroupLayout(targetDatasetPanel);
        targetDatasetPanel.setLayout(targetDatasetPanelLayout);
        targetDatasetPanelLayout.setHorizontalGroup(
            targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, targetDatasetPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(targetDatasetLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(precTitleLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(precTitleTextBox)
                    .addComponent(targetDatasetCombo, 0, 280, Short.MAX_VALUE))
                .addContainerGap())
        );
        targetDatasetPanelLayout.setVerticalGroup(
            targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(targetDatasetPanelLayout.createSequentialGroup()
                .addGroup(targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(targetDatasetCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(targetDatasetLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(targetDatasetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(precTitleTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precTitleLabel)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(csvCharacteristicsIntPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dataCharacteristicsIntPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputFileIntPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(targetDatasetPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(importingProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(importButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputFileIntPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(csvCharacteristicsIntPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataCharacteristicsIntPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(targetDatasetPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(importButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(importingProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileButtonActionPerformed
        javax.swing.JFileChooser fcI=new javax.swing.JFileChooser();
        
        // getting input csv file
        fcI.addChoosableFileFilter(new FileFilter() {
            public String getDescription() {
                return "CSV documents (*.csv)";
            }
            public boolean accept(File f) {
                if (f.isDirectory()) {
                    return (true);
                } else {
                    if (f.getName().toLowerCase().endsWith(".csv")){
                        return (true);
                    } else {
                        return (false);
                    }
                }
            }
        });
        fcI.setDialogTitle("CSV input file");
        int result=fcI.showDialog(this,"Select");
        if (result == javax.swing.JFileChooser.CANCEL_OPTION) return;
        java.io.File fileInput = fcI.getSelectedFile();
        
        // basic check
        if (fileInput == null) return;
        
        this.inputFileTextBox.setText(fileInput.getAbsolutePath());
    }//GEN-LAST:event_inputFileButtonActionPerformed

    private void csvSeparatorTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvSeparatorTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_csvSeparatorTextBoxActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        CsvImporterBackground importerBackground;
        PrecipitationWriter precFileWriter;
        MetaRaster targetMetaRaster;
        TimeIntervalOption timeOpt;
        String precipitationTitle;
        String[][] csvContent;
        int timeIntervalVal;
        char csvSeparator;
        String tempString;
        String filePath;
        File csvFile;
        
        // getting informations about input file from form
        filePath = this.inputFileTextBox.getText();
        csvFile = new File(filePath);
        
        // getting infos - output
        precipitationTitle = this.precTitleTextBox.getText();
        
        // basic check - must have only one char at csv separator
        tempString = this.csvSeparatorTextBox.getText().trim();
        if (tempString.length() == 0){
            this.showErrorMessage("Must inform a CSV character for separator.");
        }
        csvSeparator = tempString.charAt(0);
        
        // basic check - precipitation name cannot have dots nor be ampty
        if (precipitationTitle.length() == 0){
            this.showErrorMessage("Precipitation title cannot be empyt.");
            return;
        } else if (precipitationTitle.contains(".")) {
            this.showErrorMessage("Character '.' invalid for precipitation title.");
            return;
        }
        
        // basic check - must have at least one DEM selected
        tempString = (String)this.targetDatasetCombo.getSelectedItem();
        if (tempString == null){
            this.showErrorMessage("Must select at least one dataset.");
        }
        targetMetaRaster = SwmmCuencasLibrary.getMetaRaster(tempString);
        
        // basic check - time interval must be a integer
        try{
            timeIntervalVal = Integer.parseInt(this.timeIntervalTextBox.getText());
        } catch (NumberFormatException exp) {
            this.showErrorMessage("Interval value must be a integer.");
            return;
        }
        
        // read CSV brute content
        csvContent = CSVFileReader.readEntireFile(csvFile, csvSeparator);
        
        // getting time information
        timeOpt = (TimeIntervalOption)this.timeIntervalCombo.getSelectedItem();
        
        // preparing file writer
        precFileWriter = new PrecipitationWriter(targetMetaRaster);
        precFileWriter.setDataInterval(timeOpt, timeIntervalVal); // TODO - it right
        precFileWriter.setInputDateFormat(this.dateFormatTextBox.getText());
        precFileWriter.setPrecipitationTitle(this.precTitleTextBox.getText());
        
        // open and start background thread importer
        importerBackground = new CsvImporterBackground(precFileWriter, 
                                                       this.importingProgressBar);
        importerBackground.setDataSequence(csvContent);
        importerBackground.setExampleMetaRaster(targetMetaRaster);
        importerBackground.execute();
    }//GEN-LAST:event_importButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ImportCSVRainfallDateInfoDialog newDateInfoDialog;
        
        newDateInfoDialog = new ImportCSVRainfallDateInfoDialog(new JFrame(), true);
        newDateInfoDialog.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void showErrorMessage(String message_arg){
        JOptionPane.showMessageDialog(this, "Invalid field", message_arg, JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ImportCSVRainfallToStormEventDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ImportCSVRainfallToStormEventDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ImportCSVRainfallToStormEventDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ImportCSVRainfallToStormEventDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ImportCSVRainfallToStormEventDialog dialog = new ImportCSVRainfallToStormEventDialog(new ParentGUI(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel csvCharacteristicsIntPanel;
    private javax.swing.JLabel csvSeparatorLabel;
    private javax.swing.JTextField csvSeparatorTextBox;
    private javax.swing.JPanel dataCharacteristicsIntPanel;
    private javax.swing.JLabel dateFormatLabel;
    private javax.swing.JTextField dateFormatTextBox;
    private javax.swing.JButton importButton;
    private javax.swing.JProgressBar importingProgressBar;
    private javax.swing.JButton inputFileButton;
    private javax.swing.JPanel inputFileIntPanel;
    private javax.swing.JLabel inputFileLabel;
    private javax.swing.JTextField inputFileTextBox;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel precTitleLabel;
    private javax.swing.JTextField precTitleTextBox;
    private javax.swing.JComboBox targetDatasetCombo;
    private javax.swing.JLabel targetDatasetLabel;
    private javax.swing.JPanel targetDatasetPanel;
    private javax.swing.JComboBox timeIntervalCombo;
    private javax.swing.JLabel timeIntervalLabel;
    private javax.swing.JTextField timeIntervalTextBox;
    // End of variables declaration//GEN-END:variables
}
