/*
 * NetworkTools.java
 *
 * Created on August 11, 2003, 2:34 PM
 */

package hydroScalingAPI.subGUIs.widgets;

/**
 *
 * @author Ricardo Mantilla
 */
public class NetworkTools extends javax.swing.JDialog {
    
    private hydroScalingAPI.mainGUI.ParentGUI mainFrame;
    public hydroScalingAPI.io.MetaRaster metaDatos;
    public byte[][] matDir;
    private int xOut,yOut;
    
    /** Creates new form NetworkTools */
    public NetworkTools(hydroScalingAPI.mainGUI.ParentGUI parent, int x, int y, byte[][] direcc, hydroScalingAPI.io.MetaRaster md) {
        super(parent, true);
        mainFrame=parent;
        metaDatos=md;
        matDir=direcc;
        xOut=x;
        yOut=y;
        initComponents();
        
        setBounds(0,0, 250, 4*40);
        java.awt.Rectangle marcoParent=mainFrame.getBounds();
        java.awt.Rectangle thisMarco=this.getBounds();
        setBounds(marcoParent.x+marcoParent.width/2-thisMarco.width/2,marcoParent.y+marcoParent.height/2-thisMarco.height/2,thisMarco.width,thisMarco.height);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        GeomrphAnalysis = new javax.swing.JButton();
        RunoffModel = new javax.swing.JButton();
        BasinMask = new javax.swing.JButton();
        BasinDivideToPoly = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout(4, 0));

        setTitle("Available Network Tools");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        GeomrphAnalysis.setFont(new java.awt.Font("Dialog", 0, 10));
        GeomrphAnalysis.setText("Geomorphology Analysis");
        GeomrphAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GeomrphAnalysisActionPerformed(evt);
            }
        });

        getContentPane().add(GeomrphAnalysis);

        RunoffModel.setFont(new java.awt.Font("Dialog", 0, 10));
        RunoffModel.setText("Rainfall - Runoff Model");
        RunoffModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunoffModelActionPerformed(evt);
            }
        });

        getContentPane().add(RunoffModel);

        BasinMask.setFont(new java.awt.Font("Dialog", 0, 10));
        BasinMask.setText("Create Basin Mask File");
        getContentPane().add(BasinMask);

        BasinDivideToPoly.setFont(new java.awt.Font("Dialog", 0, 10));
        BasinDivideToPoly.setText("Save Divide as Polygon File");
        BasinDivideToPoly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BasinDivideToPolyActionPerformed(evt);
            }
        });

        getContentPane().add(BasinDivideToPoly);

        pack();
    }//GEN-END:initComponents

    private void BasinDivideToPolyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BasinDivideToPolyActionPerformed
        try{
            javax.swing.JFileChooser fc=new javax.swing.JFileChooser(mainFrame.getInfoManager().dataBasePolygonsPath);
            fc.setFileSelectionMode(fc.FILES_ONLY);
            fc.setDialogTitle("DEM Selection");
            javax.swing.filechooser.FileFilter mdtFilter = new visad.util.ExtensionFileFilter("poly","Polygon File");
            fc.addChoosableFileFilter(mdtFilter);
            fc.showSaveDialog(this);

            if (fc.getSelectedFile() == null) return;
        
            hydroScalingAPI.util.geomorphology.objects.Basin myCuenca=new hydroScalingAPI.util.geomorphology.objects.Basin(xOut,yOut,matDir,metaDatos);
            hydroScalingAPI.io.MetaPolygon metaPolyToWrite=new hydroScalingAPI.io.MetaPolygon ();
            metaPolyToWrite.setName(myCuenca.toString());
            metaPolyToWrite.setCoordinates(myCuenca.getLonLatBasinDivide());
            metaPolyToWrite.setInformation("Basin Divide as captured by Cuencas");
            metaPolyToWrite.writePolygon(fc.getSelectedFile());
            
            mainFrame.setUpGUI(true);
            
            closeDialog(null);
        } catch (java.io.IOException IOE){
            System.err.println("Failed creating polygon file for this basin. "+xOut+" "+yOut);
            System.err.println(IOE);
        }
    }//GEN-LAST:event_BasinDivideToPolyActionPerformed

    private void RunoffModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunoffModelActionPerformed
        try{
            java.io.File theFile=metaDatos.getLocationBinaryFile();
            metaDatos.setLocationBinaryFile(new java.io.File(theFile.getPath().substring(0,theFile.getPath().lastIndexOf("."))+".magn"));
            metaDatos.setFormat("Integer");
            int [][] magnitudes=new hydroScalingAPI.io.DataRaster(metaDatos).getInt();
            
            new hydroScalingAPI.modules.rainfallRunoffModel.widgets.Rainfall_Runoff_Model(mainFrame,xOut,yOut,matDir,magnitudes,metaDatos).setVisible(true);
            closeDialog(null);
        } catch (java.io.IOException IOE){
            System.err.println("Failed loading Rainfall_Runoff_Model. "+xOut+" "+yOut);
            System.err.println(IOE);
        } catch (visad.VisADException v){
            System.err.println("Failed loading Rainfall_Runoff_Model. "+xOut+" "+yOut);
            System.err.println(v);
        }
    }//GEN-LAST:event_RunoffModelActionPerformed

    private void GeomrphAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GeomrphAnalysisActionPerformed
        try{
            new hydroScalingAPI.modules.networkAnalysis.widgets.BasinAnalyzer (mainFrame,xOut,yOut,matDir,metaDatos).setVisible(true);
            closeDialog(null);
        } catch (java.io.IOException IOE){
            System.err.println("Failed loading BasinAnalyzer. "+xOut+" "+yOut);
            System.err.println(IOE);
        } catch (visad.VisADException v){
            System.err.println("Failed loading BasinAnalyzer. "+xOut+" "+yOut);
            System.err.println(v);
        }
    }//GEN-LAST:event_GeomrphAnalysisActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try{
            hydroScalingAPI.mainGUI.ParentGUI tempFrame=new hydroScalingAPI.mainGUI.ParentGUI();
            java.io.File theFile=new java.io.File("/hidrosigDataBases/Demo_database/Rasters/Topography/3_ArcSec/TestCases/NewHS/testdem.metaDEM");
            hydroScalingAPI.io.MetaRaster metaModif=new hydroScalingAPI.io.MetaRaster (theFile);
            metaModif.setLocationBinaryFile(new java.io.File("/hidrosigDataBases/Demo_database/Rasters/Topography/3_ArcSec/TestCases/NewHS/testdem.dir"));

            String formatoOriginal=metaModif.getFormat();
            metaModif.setFormat("Byte");
            byte [][] matDirs=new hydroScalingAPI.io.DataRaster(metaModif).getByte();

            hydroScalingAPI.util.geomorphology.objects.Basin laCuenca=new hydroScalingAPI.util.geomorphology.objects.Basin(3,96,matDirs,metaModif);

            new NetworkTools(tempFrame,3,96,matDirs,metaModif).setVisible(true);
        } catch (java.io.IOException IOE){
            System.out.print(IOE);
            System.exit(0);
        }   
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BasinDivideToPoly;
    private javax.swing.JButton BasinMask;
    private javax.swing.JButton GeomrphAnalysis;
    private javax.swing.JButton RunoffModel;
    // End of variables declaration//GEN-END:variables
    
}
